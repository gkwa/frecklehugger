name: Build & Test
"on":
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  schedule:
    - cron: 01 13 * * SAT
jobs:
  build:
    name: Build & Test
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5
        with:
          go-version: stable
      - name: Set GOVERSION environment variable (Linux/macOS)
        if: runner.os != 'Windows'
        run: echo "GOVERSION=$(go version)" >> $GITHUB_ENV
      - name: Set GOVERSION environment variable (Windows)
        if: runner.os == 'Windows'
        run: echo "GOVERSION=$(go version)" | Out-File -FilePath $env:GITHUB_ENV -Append
      - name: Build & Test
        run: |
          go build -v
          go test ./...
      - name: golangci-lint
        uses: golangci/golangci-lint-action@818ec4d51a1feacefc42ff1b3ec25d4962690f39 # v6
        with:
          args: --config=.golangci.yml --issues-exit-code=0
          skip-cache: true
      - name: Run GoReleaser
        if: runner.os == 'Linux'
        uses: goreleaser/goreleaser-action@90a3faa9d0182683851fbfa97ca1a2cb983bfca3 # v6
        with:
          args: release --snapshot --skip=publish --clean
      - name: Colored Output Test
        if: runner.os == 'Linux'
        shell: script -q -e -c "bash {0}"
        run: go run main.go -- main.go
